--------------------------------------------------------------------------------
-- Title         : 7-Bit Comparator
-- Project       : VHDL Synthesis Overview
-------------------------------------------------------------------------------
-- File          : sevenBitComparator.vhd
-- Author        : Aaron Thomas  <athom254@uottawa.ca>
-- Created       : 2024/05/30
-- Last modified : 2024/05/30
-------------------------------------------------------------------------------
-- Description : This file defines a 7-bit comparator that compares two 
--                7-bit vectors (a and b) and outputs two signals: 'equal' 
--                indicating whether the two vectors are equal, and 'less_than' 
--                indicating whether vector 'a' is less than vector 'b'. The 
--                comparison is done bit by bit using instances of a one-bit 
--                comparator component.
-------------------------------------------------------------------------------
-- Modification history :
-- 2024/05/30  Aaron Thomas  Initial creation
-------------------------------------------------------------------------------
-- This file is provided by Aaron Thomas. Permission to make digital or hard 
-- copies of part or all of this work for personal or classroom use is granted 
-- without fee provided that copies are not made or distributed for profit or 
-- commercial advantage and that copies bear this notice and the full citation 
-- of this work. Prior permission is required to copy, republish, redistribute, 
-- or post this work. This notice is adapted from the ACM copyright notice.
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;

ENTITY sevenBitComparator IS
    PORT(
        a, b : IN  STD_LOGIC_VECTOR(6 DOWNTO 0);
        equal, less_than : OUT STD_LOGIC
    );
END sevenBitComparator;

ARCHITECTURE rtl OF sevenBitComparator IS
    SIGNAL eq_bits : STD_LOGIC_VECTOR(6 DOWNTO 0);
    SIGNAL lt_bits : STD_LOGIC_VECTOR(6 DOWNTO 0);

    COMPONENT oneBitComparator
    PORT(
        a, b : IN  STD_LOGIC;
        equal, less_than : OUT STD_LOGIC
    );
    END COMPONENT;

BEGIN
    bit6: oneBitComparator
        PORT MAP (a => a(6), b => b(6), equal => eq_bits(6), less_than => lt_bits(6));

    bit5: oneBitComparator
        PORT MAP (a => a(5), b => b(5), equal => eq_bits(5), less_than => lt_bits(5));

    bit4: oneBitComparator
        PORT MAP (a => a(4), b => b(4), equal => eq_bits(4), less_than => lt_bits(4));

    bit3: oneBitComparator
        PORT MAP (a => a(3), b => b(3), equal => eq_bits(3), less_than => lt_bits(3));

    bit2: oneBitComparator
        PORT MAP (a => a(2), b => b(2), equal => eq_bits(2), less_than => lt_bits(2));

    bit1: oneBitComparator
        PORT MAP (a => a(1), b => b(1), equal => eq_bits(1), less_than => lt_bits(1));

    bit0: oneBitComparator
        PORT MAP (a => a(0), b => b(0), equal => eq_bits(0), less_than => lt_bits(0));

    equal <= eq_bits(6) AND eq_bits(5) AND eq_bits(4) AND eq_bits(3) AND eq_bits(2) AND eq_bits(1) AND eq_bits(0);
    less_than <= lt_bits(6) OR lt_bits(5) OR lt_bits(4) OR lt_bits(3) OR lt_bits(2) OR lt_bits(1) OR lt_bits(0);
END rtl;
